'use client'

import { useState } from 'react'
import Link from 'next/link'
import ClientLayout from '@/components/client/ClientLayout'

export default function EarnPage() {
  const [selectedPlan, setSelectedPlan] = useState('consultant')
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    city: '',
    experience: '',
    motivation: ''
  })

  const plans = [
    {
      id: 'consultant',
      name: '–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∑–¥–æ—Ä–æ–≤—å—é',
      commission: '–¥–æ 25%',
      requirements: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ',
      benefits: [
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ –¥–æ 25%',
        '–†–æ–∑–Ω–∏—á–Ω–∞—è –Ω–∞—Ü–µ–Ω–∫–∞ 25-40%',
        '–î–æ—Å—Ç—É–ø –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É',
        '–û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –≤–µ–±–∏–Ω–∞—Ä—ã',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞',
        '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞'
      ],
      color: 'emerald'
    },
    {
      id: 'manager',
      name: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é',
      commission: '–¥–æ 40%',
      requirements: '–û–±–æ—Ä–æ—Ç –≥—Ä—É–ø–ø—ã –æ—Ç 100,000 ‚ÇΩ',
      benefits: [
        '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ –¥–æ 40%',
        '–ö–æ–º–∞–Ω–¥–Ω—ã–µ –±–æ–Ω—É—Å—ã 5-15%',
        '–õ–∏–¥–µ—Ä—Å–∫–∏–µ –Ω–∞–¥–±–∞–≤–∫–∏',
        '–£—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ —Ä–∞–∑–≤–∏—Ç–∏—è',
        '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ —Å–µ–º–∏–Ω–∞—Ä—ã',
        '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–æ—â—Ä–µ–Ω–∏—è'
      ],
      color: 'blue'
    },
    {
      id: 'director',
      name: '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
      commission: '–¥–æ 50%',
      requirements: '–û–±–æ—Ä–æ—Ç —Å–µ—Ç–∏ –æ—Ç 500,000 ‚ÇΩ',
      benefits: [
        '–î–∏—Ä–µ–∫—Ç–æ—Ä—Å–∫–∞—è —Å–∫–∏–¥–∫–∞ –¥–æ 50%',
        '–ü—Ä–æ—Ü–µ–Ω—Ç —Å –æ–±–æ—Ä–æ—Ç–∞ —Å–µ—Ç–∏ –¥–æ 12%',
        '–ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',
        '–ó–∞—Ä—É–±–µ–∂–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏ –∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏',
        '–°—Ç–∞—Ç—É—Å VIP-–ø–∞—Ä—Ç–Ω–µ—Ä–∞',
        '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ'
      ],
      color: 'purple'
    }
  ]

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    alert('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. üìû')
  }

  return (
    <ClientLayout>
      {/* Hero Section */}
      <section className="relative min-h-screen flex items-center justify-center overflow-hidden bg-gradient-to-br from-emerald-50 via-teal-50 to-cyan-50 dark:from-emerald-950 dark:via-teal-950 dark:to-cyan-950">
        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
        <div className="absolute inset-0">
          <div className="absolute top-20 left-10 w-32 h-32 bg-emerald-200/30 dark:bg-emerald-700/30 rounded-full animate-pulse"></div>
          <div className="absolute top-40 right-20 w-24 h-24 bg-teal-200/30 dark:bg-teal-700/30 rounded-full animate-bounce"></div>
          <div className="absolute bottom-32 left-1/4 w-40 h-40 bg-cyan-200/20 dark:bg-cyan-700/20 rounded-full animate-pulse"></div>
          <div className="absolute bottom-20 right-1/3 w-28 h-28 bg-emerald-300/20 dark:bg-emerald-600/20 rounded-full animate-bounce"></div>
        </div>

        <div className="relative z-10 max-w-6xl mx-auto px-4 text-center">
          <h1 className="text-5xl md:text-7xl font-bold mb-6 bg-gradient-to-r from-emerald-600 via-teal-600 to-cyan-600 bg-clip-text text-transparent">
            üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —Å –Ω–∞–º–∏
          </h1>
          
          <p className="text-xl md:text-2xl text-gray-700 dark:text-gray-300 mb-8 max-w-4xl mx-auto leading-relaxed">
            –°—Ç–∞–Ω—å—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º –ø–æ –∑–¥–æ—Ä–æ–≤—å—é –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ Siberian Wellness
          </p>
          
          <p className="text-lg text-gray-600 dark:text-gray-400 mb-12 max-w-3xl mx-auto">
            –ë–æ–ª–µ–µ 25 –ª–µ—Ç –∫–æ–º–ø–∞–Ω–∏—è —Ä–∞–∑–≤–∏–≤–∞–µ—Ç —Å–µ—Ç–µ–≤–æ–π –±–∏–∑–Ω–µ—Å –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –°–µ–≥–æ–¥–Ω—è –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –≤ 25+ —Å—Ç—Ä–∞–Ω–∞—Ö –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º 
            –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤.
          </p>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
            {[
              { icon: 'üí∞', title: '–°–∫–∏–¥–∫–∞ –¥–æ 50%', desc: '–ù–∞ –≤—Å—é –ø—Ä–æ–¥—É–∫—Ü–∏—é –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤' },
              { icon: 'üèÜ', title: '25+ –ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ', desc: '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å' },
              { icon: 'üåç', title: '25 —Å—Ç—Ä–∞–Ω –º–∏—Ä–∞', desc: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è' }
            ].map((item, index) => (
              <div key={index} className="bg-white/80 dark:bg-gray-800/80 backdrop-blur-lg rounded-2xl p-6 shadow-lg">
                <div className="text-4xl mb-3">{item.icon}</div>
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">{item.title}</h3>
                <p className="text-gray-600 dark:text-gray-400">{item.desc}</p>
              </div>
            ))}
          </div>

          <a href="#plans" className="inline-block px-8 py-4 bg-gradient-to-r from-emerald-600 to-teal-600 text-white rounded-2xl font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300">
            üöÄ –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
          </a>
        </div>
      </section>

      {/* –ü–ª–∞–Ω—ã –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞ */}
      <section id="plans" className="py-20 bg-white dark:bg-gray-900">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-gray-900 dark:text-white mb-4">
              üìä –ü–ª–∞–Ω—ã –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞
            </h2>
            <p className="text-lg text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
              –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º. –ö–∞–∂–¥—ã–π –ø–ª–∞–Ω –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {plans.map((plan) => (
              <div
                key={plan.id}
                className={`relative bg-white dark:bg-gray-800 rounded-2xl shadow-xl overflow-hidden transform hover:scale-105 transition-all duration-300 ${
                  plan.id === 'manager' ? 'ring-4 ring-blue-500 ring-opacity-50' : ''
                }`}
              >
                {plan.id === 'manager' && (
                  <div className="absolute top-0 left-0 right-0 bg-blue-500 text-white text-center py-2 text-sm font-semibold">
                    üåü –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä
                  </div>
                )}
                
                <div className="p-8">
                  <div className={`w-16 h-16 mx-auto mb-6 rounded-2xl flex items-center justify-center ${
                    plan.color === 'emerald' ? 'bg-emerald-100 dark:bg-emerald-900' :
                    plan.color === 'blue' ? 'bg-blue-100 dark:bg-blue-900' :
                    'bg-purple-100 dark:bg-purple-900'
                  }`}>
                    <span className="text-2xl">
                      {plan.id === 'consultant' ? 'üë§' : plan.id === 'manager' ? 'üëî' : 'üëë'}
                    </span>
                  </div>

                  <h3 className="text-2xl font-bold text-gray-900 dark:text-white text-center mb-2">
                    {plan.name}
                  </h3>
                  
                  <div className="text-center mb-6">
                    <span className={`text-4xl font-bold ${
                      plan.color === 'emerald' ? 'text-emerald-600' :
                      plan.color === 'blue' ? 'text-blue-600' :
                      'text-purple-600'
                    }`}>
                      {plan.commission}
                    </span>
                    <p className="text-gray-600 dark:text-gray-400 mt-1">–∫–æ–º–∏—Å—Å–∏—è</p>
                  </div>

                  <div className="mb-6">
                    <p className="text-sm text-gray-500 dark:text-gray-400 mb-2">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</p>
                    <p className="font-semibold text-gray-700 dark:text-gray-300">{plan.requirements}</p>
                  </div>

                  <ul className="space-y-3 mb-8">
                    {plan.benefits.map((benefit, index) => (
                      <li key={index} className="flex items-start space-x-3">
                        <span className="text-emerald-500 mt-1">‚úì</span>
                        <span className="text-gray-700 dark:text-gray-300">{benefit}</span>
                      </li>
                    ))}
                  </ul>

                  <button
                    onClick={() => setSelectedPlan(plan.id)}
                    className={`w-full py-3 rounded-xl font-semibold transition-all duration-300 ${
                      selectedPlan === plan.id
                        ? `${
                            plan.color === 'emerald' ? 'bg-emerald-600 hover:bg-emerald-700' :
                            plan.color === 'blue' ? 'bg-blue-600 hover:bg-blue-700' :
                            'bg-purple-600 hover:bg-purple-700'
                          } text-white`
                        : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'
                    }`}
                  >
                    {selectedPlan === plan.id ? '‚úì –í—ã–±—Ä–∞–Ω–æ' : '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω'}
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å –Ω–∞–º–∏ */}
      <section className="py-20 bg-gradient-to-r from-emerald-50 to-teal-50 dark:from-emerald-950 dark:to-teal-950">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-gray-900 dark:text-white mb-4">
              ‚ú® –ü–æ—á–µ–º—É Siberian Wellness?
            </h2>
            <p className="text-lg text-gray-600 dark:text-gray-400">
              –ú—ã —Å–æ–∑–¥–∞–ª–∏ –∏–¥–µ–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ —É—Å–ø–µ—Ö–∞
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              {
                icon: 'üéì',
                title: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
                description: '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞, –≤–µ–±–∏–Ω–∞—Ä—ã, —Ç—Ä–µ–Ω–∏–Ω–≥–∏'
              },
              {
                icon: 'üèÜ',
                title: '20+ –ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ',
                description: '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å –±–µ–∑—É–ø—Ä–µ—á–Ω–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π'
              },
              {
                icon: 'üåç',
                title: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è —Å–µ—Ç—å',
                description: '–†–∞–±–æ—Ç–∞–µ–º –≤ 25+ —Å—Ç—Ä–∞–Ω–∞—Ö –º–∏—Ä–∞, —Ä–∞–∑–≤–∏—Ç–∞—è –ª–æ–≥–∏—Å—Ç–∏–∫–∞'
              },
              {
                icon: 'üíé',
                title: '–ü—Ä–µ–º–∏—É–º –ø—Ä–æ–¥—É–∫—Ç—ã',
                description: '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏'
              },
              {
                icon: 'üì±',
                title: '–¶–∏—Ñ—Ä–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
                description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ CRM, –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è'
              },
              {
                icon: 'üéÅ',
                title: '–ë–æ–Ω—É—Å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã',
                description: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è, –ø—Ä–∏–∑—ã, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è'
              },
              {
                icon: 'üë•',
                title: '–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤',
                description: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –∏ –æ–ø—ã—Ç–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤'
              },
              {
                icon: 'üí≥',
                title: '–ë—ã—Å—Ç—Ä—ã–µ –≤—ã–ø–ª–∞—Ç—ã',
                description: '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –∫–æ–º–∏—Å—Å–∏–π, –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞'
              }
            ].map((item, index) => (
              <div key={index} className="text-center group">
                <div className="w-20 h-20 bg-white dark:bg-gray-800 rounded-2xl shadow-lg flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300">
                  <span className="text-3xl">{item.icon}</span>
                </div>
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                  {item.title}
                </h3>
                <p className="text-gray-600 dark:text-gray-400 text-sm">
                  {item.description}
                </p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
      <section className="py-20 bg-white dark:bg-gray-900">
        <div className="max-w-4xl mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-gray-900 dark:text-white mb-4">
              üìù –°—Ç–∞–Ω—å—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
            </h2>
            <p className="text-lg text-gray-600 dark:text-gray-400">
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞
            </p>
          </div>

          <div className="bg-gradient-to-br from-emerald-50 to-teal-50 dark:from-gray-800 dark:to-gray-700 rounded-2xl p-8 shadow-xl">
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è *
                  </label>
                  <input
                    type="text"
                    required
                    value={formData.name}
                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white"
                    placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    Email *
                  </label>
                  <input
                    type="email"
                    required
                    value={formData.email}
                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white"
                    placeholder="ivan@example.com"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    –¢–µ–ª–µ—Ñ–æ–Ω *
                  </label>
                  <input
                    type="tel"
                    required
                    value={formData.phone}
                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white"
                    placeholder="+7 999 123-45-67"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    –ì–æ—Ä–æ–¥ *
                  </label>
                  <input
                    type="text"
                    required
                    value={formData.city}
                    onChange={(e) => setFormData({ ...formData, city: e.target.value })}
                    className="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white"
                    placeholder="–ú–æ—Å–∫–≤–∞"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  –û–ø—ã—Ç –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö
                </label>
                <select
                  value={formData.experience}
                  onChange={(e) => setFormData({ ...formData, experience: e.target.value })}
                  className="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white"
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—ã—Ç</option>
                  <option value="no-experience">–ë–µ–∑ –æ–ø—ã—Ç–∞</option>
                  <option value="1-2-years">1-2 –≥–æ–¥–∞</option>
                  <option value="3-5-years">3-5 –ª–µ—Ç</option>
                  <option value="5-plus-years">–ë–æ–ª–µ–µ 5 –ª–µ—Ç</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  –ß—Ç–æ –≤–∞—Å –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç?
                </label>
                <textarea
                  value={formData.motivation}
                  onChange={(e) => setFormData({ ...formData, motivation: e.target.value })}
                  rows={4}
                  className="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 dark:bg-gray-700 dark:text-white"
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ –≤–∞—à–∏—Ö —Ü–µ–ª—è—Ö –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏..."
                />
              </div>

              <div className="bg-emerald-100 dark:bg-emerald-900/30 rounded-lg p-4">
                <h4 className="font-semibold text-emerald-800 dark:text-emerald-300 mb-2">
                  –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–ª–∞–Ω: {plans.find(p => p.id === selectedPlan)?.name}
                </h4>
                <p className="text-emerald-700 dark:text-emerald-400 text-sm">
                  –ö–æ–º–∏—Å—Å–∏—è: {plans.find(p => p.id === selectedPlan)?.commission}
                </p>
              </div>

              <button
                type="submit"
                className="w-full py-4 bg-gradient-to-r from-emerald-600 to-teal-600 text-white rounded-xl font-semibold text-lg shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
              >
                üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </button>

              <p className="text-sm text-gray-500 dark:text-gray-400 text-center">
                –û—Ç–ø—Ä–∞–≤–ª—è—è –∑–∞—è–≤–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å{' '}
                <Link href="/privacy" className="text-emerald-600 hover:underline">
                  –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </Link>
              </p>
            </form>
          </div>
        </div>
      </section>

      {/* –ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ */}
      <section className="py-20 bg-gradient-to-r from-emerald-50 to-teal-50 dark:from-emerald-950 dark:to-teal-950">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-gray-900 dark:text-white mb-4">
              üåü –ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞
            </h2>
            <p className="text-lg text-gray-600 dark:text-gray-400">
              –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –Ω–∞—à–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —É—Å–ø–µ—Ö–∞
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                name: '–ú–∞—Ä–∏—è –í–æ–ª–∫–æ–≤–∞',
                role: '–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
                income: '–¥–æ 200,000 ‚ÇΩ/–º–µ—Å',
                story: '–ó–∞ 3 –≥–æ–¥–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –ø–æ—Å—Ç—Ä–æ–∏–ª–∞ —Å–µ—Ç—å –≤ 5 –≥–æ—Ä–æ–¥–∞—Ö. –ü–æ–ª—É—á–∏–ª–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –∫–æ–º–ø–∞–Ω–∏–∏',
                avatar: 'üë©‚Äçüíº'
              },
              {
                name: '–î–º–∏—Ç—Ä–∏–π –û—Ä–ª–æ–≤',
                role: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é',
                income: '–¥–æ 120,000 ‚ÇΩ/–º–µ—Å',
                story: '–ù–∞—á–∞–ª –∫–∞–∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç, –∑–∞ 18 –º–µ—Å—è—Ü–µ–≤ –¥–æ—Å—Ç–∏–≥ –º–µ–Ω–µ–¥–∂–µ—Ä—Å–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –ø–æ–¥—Ö–æ–¥—É',
                avatar: 'üë®‚Äçüíº'
              },
              {
                name: '–°–≤–µ—Ç–ª–∞–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞',
                role: '–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∑–¥–æ—Ä–æ–≤—å—é',
                income: '–¥–æ 60,000 ‚ÇΩ/–º–µ—Å',
                story: '–°–æ–≤–º–µ—â–∞—é –æ—Å–Ω–æ–≤–Ω—É—é —Ä–∞–±–æ—Ç—É —Å –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –ø–æ–∑–≤–æ–ª–∏–ª —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—á—Ç—ã',
                avatar: 'üë©‚Äç‚öïÔ∏è'
              }
            ].map((person, index) => (
              <div key={index} className="bg-white dark:bg-gray-800 rounded-2xl p-6 shadow-lg">
                <div className="text-center mb-4">
                  <div className="text-5xl mb-2">{person.avatar}</div>
                  <h3 className="text-lg font-semibold text-gray-900 dark:text-white">{person.name}</h3>
                  <p className="text-emerald-600 dark:text-emerald-400 font-medium">{person.role}</p>
                  <p className="text-2xl font-bold text-gray-900 dark:text-white">{person.income}</p>
                </div>
                <p className="text-gray-600 dark:text-gray-400 text-center italic">
                  "{person.story}"
                </p>
              </div>
            ))}
          </div>
        </div>
      </section>
    </ClientLayout>
  )
}
