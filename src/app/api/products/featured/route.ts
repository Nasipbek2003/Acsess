import { NextResponse } from 'next/server'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

// GET - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
export async function GET() {
  try {
    console.log('üîç Fetching featured products...')
    
    const products = await prisma.product.findMany({
      include: {
        category: true
      },
      where: {
        stock: {
          gt: 0 // –¢–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä—ã –≤ –Ω–∞–ª–∏—á–∏–∏
        }
      },
      orderBy: [
        { created_at: 'desc' },
        { name: 'asc' }
      ],
      take: 12 // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 12 –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    })

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    const featuredProducts = products.map(product => ({
      id: product.id,
      name: product.name,
      price: product.price,
      image: product.image_url || undefined,
      category: product.category?.name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'
    }))

    console.log(`‚úÖ Found ${featuredProducts.length} featured products`)
    return NextResponse.json(featuredProducts)

  } catch (error) {
    console.error('‚ùå Error fetching featured products:', error)
    return NextResponse.json(
      { error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤' },
      { status: 500 }
    )
  } finally {
    await prisma.$disconnect()
  }
}
