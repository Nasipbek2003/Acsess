import { NextResponse } from 'next/server'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

export async function POST(request: Request) {
  try {
    const { login, password } = await request.json()

    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞:', { login, passwordLength: password?.length })

    if (!login || !password) {
      return NextResponse.json(
        { error: '–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' },
        { status: 400 }
      )
    }

    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const settings = await prisma.setting.findFirst({
      where: {
        login_admin: {
          not: null
        },
        password_admin: {
          not: null
        }
      }
    })

    console.log('üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã:', settings ? {
      id: settings.id,
      login: settings.login_admin,
      hasPassword: !!settings.password_admin,
      hasTelegram: !!settings.telegram_key
    } : '–ù–ï –ù–ê–ô–î–ï–ù–´')

    if (!settings) {
      return NextResponse.json(
        { error: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö' },
        { status: 500 }
      )
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
    if (settings.login_admin !== login || settings.password_admin !== password) {
      console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', { 
        inputLogin: login, 
        dbLogin: settings.login_admin,
        passwordMatch: settings.password_admin === password
      })
      return NextResponse.json(
        { error: '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å' },
        { status: 401 }
      )
    }

    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤–µ—Ä–Ω—ã!')

    return NextResponse.json({
      success: true,
      message: '–î–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã, –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –≤–≤–æ–¥—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    })

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–Ω–∞:', error)
    return NextResponse.json(
      { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    )
  } finally {
    await prisma.$disconnect()
  }
}
